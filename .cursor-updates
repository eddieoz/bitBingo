Added /api/block-hash/:blockNumber endpoint to fetch the block hash for a given block number from BlockCypher. 

feat: Add player page structure and components for card generation/display (Story 2) 

feat: add endpoint to fetch block hash by number
feat: add play page with form to fetch block hash by number 
feat: implement backend logic for card generation (/api/cards, helpers)
feat: add frontend components (BingoCard, UserCardsDisplay) to show cards 

Fix ESLint warnings in client components (unused imports/vars, useEffect dependency). 

Refactor: Implement caching, use current block hash seed, fix CID decode for /api/cards. 

Refactor: Remove client-side card fetch/gen logic, use backend /api/cards. 

Fix: Change /api/cards to GET, fix DOM props (for/class) in WinnerDisplay. 

Fix: Pass correct public key Buffer to generateBingoCard in /api/cards. 

Fix: Ensure derivePublicKey returns a Buffer using Buffer.from(). 

feat: Implement Story 2 - Card generation and user login flow. 

Refactor: Analyze code and update tasks.md roadmap status. 

Refactored `checkBingo` and `countMarkedNumbers` in `server/utils.js` for correct grid structure and free space handling; renamed `checkBingo` to `checkWinCondition`. 

- Implemented win condition checking in `/api/draw/:txid` which stops the game and records winners.
- Corrected statistics calculation in `/api/game-state/:txid` to show top 3 player groups by marked numbers. 

- Added state and polling logic to `PlayPage.jsx` for real-time game state updates (drawn numbers, statistics, game over status, winners).
- Implemented basic GM role detection and controls based on localStorage token. 

- Added loading state (`isLoadingDraw`) to the Draw button in `PlayPage.jsx`. 

- Updated `docs/tasks.md` roadmap to reflect completion of real-time polling, card marking, win detection, statistics calculation, and GM controls. 

- Refactored `client/app/page.tsx` (Admin Page) to implement correct polling, game state handling (isGameOver, winners, statistics), and draw button logic, aligning it with `PlayPage.jsx`. 

- Fixed TypeScript prop errors in `client/app/page.tsx` after component refactoring. 

- Fixed duplicate path issue in TransactionCreator URL construction in `client/app/page.tsx`.
- Restored side-by-side layout for Upload/Create Transaction cards in `client/app/page.tsx`. 

- Made pollingError rendering in `client/app/page.tsx` robust against non-string values. 

- Added more robust error message handling in `catch` blocks in `client/app/page.tsx` to ensure `pollingError` state is always a string. 

- Made internal error/message rendering in `TransactionCreator.jsx` robust against non-string values. 

- Made statistics rendering in `GameStateDisplay.jsx` robust against non-string values. 

- Updated game state statistics to show max marks in any line (row/col/diag) instead of total marked drawn numbers. 

- Removed redundant `setGmToken` call in `handleDrawNumber` (admin page) to rely on `useEffect` reading from localStorage. 

- Re-added direct `setGmToken` call in `handleDrawNumber` (admin page) to potentially fix token race condition. 

- Refactored GM token handling: Generate token during backend initialization (`/check-transaction`), verify only in `/draw`, remove frontend handling from draw response. 

- Send new GM token from backend on init; frontend stores it on confirmation. 

- Fixed `TransactionCreator` to pass full data (including gmToken) to `onTransactionConfirmed` callback. 

- Fixed `handleTransactionConfirmed` to use `data.txid` instead of stale `raffleState.txId` for storing initial GM token. 

- Updated frontend to display winners and highlight winning sequences on play/admin pages, and updated server API to provide sequence info. 

- Updated winning sequence display/logic to include "FREE" space and fixed PlayPage param handling. 

- Refined winner highlighting logic and updated play page to show full winner details for all viewers. 

- Fixed 404 error on PlayPage by correcting API URL construction in fetchGameState. 

- Fixed 404 error during login by correcting API URL construction in UserLogin component. 

- Cleaned up unused code: deleted WinnerDisplay.jsx and old PlayPage.jsx, removed unused functions from TransactionCreator.jsx. 

- Reverted PlayPage params handling to use `React.use()` with type assertion to fix runtime warning. 

Fix: Retrieve existing game state correctly in /api/check-transaction else block. 

Fix: Correct CSV header handling and update verification docs. 

Updated .gitignore to correctly ignore the client/.next directory. 

feat: Display winner card ID on admin and participant pages. 

fix: Include cardId in winner data returned by backend API. 
fix: Restore Admin page UI elements (header details, transaction box) by fixing backend upload API and frontend component rendering. 

feat: Improve player link display on Admin page with copy button and QR code modal. 
feat: Make player link copy button show temporary 'Copied!' text on click. 